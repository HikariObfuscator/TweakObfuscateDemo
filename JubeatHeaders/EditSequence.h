//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray;

@interface EditSequence : NSObject
{
    struct *eventsTemplate[4];
    unsigned int templateNumEvent[4];
    unsigned int templateEndSector[4];
    unsigned int templateNotesNum[4];
    char templateMusicBar[4][120];
    CDStruct_009559ee *events;
    unsigned int numEvent;
    unsigned int numPlayEvent;
    unsigned int endSector;
    unsigned int notesNum;
    char musicBar[60];
    int editMusicBar[120];
    char conflictTable[60];
    char editConflictTable[120];
    CDStruct_009559ee *copyEvents;
    unsigned int numCopyEvent;
    unsigned int judgedIndex;
    unsigned int currentTempo;
    unsigned int oldTempo;
    unsigned int lastHakuSector;
    unsigned int nextHakuSector;
    unsigned int lastMeasureSector;
    unsigned int nextMeasureSector;
    short lastJudge[16];
    unsigned int lastJudgeSector[16];
    CDStruct_c6ce2fc0 gameScore;
    NSMutableArray *editHistory;
    int currentHistory;
    _Bool bClapSE;
    int clapIndex;
    int backSector;
    _Bool _enableUndo;
    _Bool _enableRedo;
    unsigned short _firstMarker;
    unsigned int _currentSector;
    unsigned int _currentIndex;
    unsigned int _firstMarkerSector;
    double _currentTime;
}

+ (void)getMusicBarData:(char *)arg1 raw:(id)arg2;
@property(readonly, nonatomic) _Bool enableRedo; // @synthesize enableRedo=_enableRedo;
@property(readonly, nonatomic) _Bool enableUndo; // @synthesize enableUndo=_enableUndo;
@property(readonly, nonatomic) unsigned int firstMarkerSector; // @synthesize firstMarkerSector=_firstMarkerSector;
@property(readonly, nonatomic) unsigned short firstMarker; // @synthesize firstMarker=_firstMarker;
@property(readonly, nonatomic) unsigned int currentIndex; // @synthesize currentIndex=_currentIndex;
@property(readonly, nonatomic) unsigned int currentSector; // @synthesize currentSector=_currentSector;
@property(readonly, nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
- (void).cxx_destruct;
- (void)eventShift:(int)arg1 destIndex:(int)arg2;
- (void)printInfoParts:(id)arg1;
- (void)dealloc;
- (unsigned int)getFirstSector;
- (unsigned int)getFirstMarker;
- (unsigned int)getEventNum;
- (unsigned int)getNoteNum;
- (unsigned int)getTemplateNoteNum:(int)arg1;
- (int)exeAreaPaste:(int)arg1;
- (void)exeAreaDelete:(int)arg1 endSec:(int)arg2;
- (_Bool)exeAreaCopy:(int)arg1 endSec:(int)arg2;
- (int)searchSectorIndex:(int)arg1;
@property(readonly, nonatomic) float playPosition;
@property(readonly, nonatomic) float measurePhase;
@property(readonly, nonatomic) float hakuPhase;
- (int)getRewindMeasureSector;
- (unsigned int)getConflictSector;
- (unsigned int)getEndSector;
- (const CDStruct_009559ee *)getSequencePasteTable;
- (const CDStruct_009559ee *)getSequenceEventTable;
- (const char *)getConflictBar;
- (const char *)getMusicBar;
- (void)getMarkerState:(int *)arg1;
- (void)seekToTime:(double)arg1;
- (void)reset;
- (id)initWithData:(id)arg1 sequenceData:(id)arg2;
- (void)importSequenceData:(id)arg1;
- (void)eventArrayDecode:(id)arg1;
- (int)getBackBeatSector:(int)arg1;
- (int)getFrontBeatSector:(int)arg1;
- (unsigned int)rate2sector:(float)arg1;
- (float)sector2rate:(int)arg1;
- (float)getNearDivBeatRate:(float)arg1 divide:(int)arg2;
- (int)getNearDiveBeatSector:(int)arg1 divide:(int)arg2;
- (float)getNearBeatRate:(float)arg1;
- (_Bool)deleteNote:(unsigned int)arg1;
- (int)addNote:(unsigned int)arg1;
- (int)addNote:(unsigned int)arg1 divide:(int)arg2 isSwitch:(_Bool)arg3;
- (void)addHistoryParts:(id)arg1 index:(int)arg2 sector:(int)arg3 type:(int)arg4 value:(int)arg5;
- (int)redoHistory;
- (int)undoHistory;
- (_Bool)isClap;
- (int)rollController:(_Bool)arg1;
- (void)addHistory:(id)arg1;
- (_Bool)conflictKeyCheck:(unsigned int)arg1 vector:(int)arg2;
- (_Bool)checkKeyConflict:(int)arg1;
- (_Bool)checkConflict:(unsigned int)arg1 vector:(int)arg2;
- (_Bool)checkConflictArea:(unsigned int)arg1 vector:(int)arg2;
- (_Bool)checkConflictByIndex:(int)arg1 btn:(unsigned int)arg2 area:(int)arg3 sameCheck:(_Bool)arg4;
- (_Bool)checkConflictBySector:(int)arg1 btn:(unsigned int)arg2 area:(int)arg3 sameCheck:(_Bool)arg4;
- (int)checkConflictBySector:(int)arg1 btn:(unsigned int)arg2 vec:(int)arg3 area:(int)arg4 sameCheck:(_Bool)arg5;
- (int)checkConflictByIndex:(int)arg1 btn:(unsigned int)arg2 vec:(int)arg3 area:(int)arg4 sameCheck:(_Bool)arg5;
- (int)searchNearIndex:(int)arg1;
- (int)searchBtnNearSector:(int)arg1 btn:(int)arg2;
- (_Bool)checkConflictEvent:(int)arg1 btn:(unsigned int)arg2;
- (void)createConflictTable;
- (void)loadTemplate:(int)arg1;
- (void)refreshConflictTable;
- (void)refreshMusicBar;
- (void)refreshEditMusicBar;
- (void)createEvents:(id)arg1 tempSlot:(int)arg2;
- (_Bool)checkEventsLegality:(id)arg1;
- (id)getEventData;

@end

